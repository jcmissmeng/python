第九天：
第三课：
		多态
		多态和继承联系紧密，没有继承就没有多态，多态主要用来处理多个子类。
        继承的关系：  is a    子类可以当做父类的一种，但反过来是不可以
第四课：
		__new__方法
			在创建对象实例时，先调用__new__方法，然后调用__init__方法
		def __new__(cls,...)
			return object.__new__(cls)
		1、它是个类方法
		2、它必须返回  object.__new__(cls)
		3、它是给对象分配内存的，返回的是分配的内存的首地址 传给__init__方法中的self参数
第五课：
		设计模式： 前人总结的在设计类的经验   24种  三大类：创建型 、组合型
		单例模式
			在一个项目中，只创建一个对象的类
第七课：
		简单工厂模式
			有从个子类，将创建不同子类的工作放到一个类中，这个类就叫做工厂类，在其他用到这个子类的地方，直接调用工厂类去生成子类。
			当添加了一个新的子类，只需要修改工厂类，其它地方是不需要修改的
第九课：
		抽象工厂模式
			工厂分抽象工厂和具体工厂，每一个具体工厂只负责生产一种具体产品。
			添加一个具体产品，就要添加一个相应的具体工厂
第十天：
第三课：
		异常处理
		什么是异常？
			异常是程序运行过程中出现的错误（语法错误、IO错误、数据错误（除数为0））。BUG(程序的逻辑错误)
        捕获异常：
			try: 
				代码块
			except  捕获的异常的类型：
				对异常的处理
第四课：
		在try中，如果是前一条语句出异常了，后续语句是不执行的
            在整个程序中，前边用try...except处理完异常，后续语句是可以继续执行的
		except:  后面不写任何类型，代表捕获所有的异常类型
		else:后面跟没有出异常要执行的语句
		finally:不管前面出或没有出异常，finally后面的语句都要执行。一般在finally后面处理前面打开的资源（文件,数据库的连接）将资源释放或关闭
第八课：
		异常的传递：
			多个函数的调用：
			异常嵌套：
第九课：
		自定义异常
第一课：
		
第一课：
		
第一课：
		
第一课：
		
第一课：
		
第一课：
		
第一课：
		
第一课：
		
