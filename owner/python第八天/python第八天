第十四天
第二课：
		导入模块路径设置
		重新导入模块
			from imp import *
			reload(模块名)
第三课：
		避免循环导入
		is是比较两个引用是否指向同一个对象（引用比较）
		==是比较两个对象是否相等（值比较）
第四课：
		浅拷贝和深拷贝  
		a=b是引用，不是拷贝，因为对象没有在内存中复制
		浅拷贝对于不可变对象相当于多了引用，也没有对内存的复制
		浅拷贝对于可变对象就不一样，它要它要进行对象内存的复制
			import copy
			a=copy.copy(b)
			a=b[:]
			a=list(b) 列表的切片，列表的list()，copy.copy都是浅拷贝
第五课：
		深拷贝 嵌套拷贝，针对所有的可变对象
			copy.deepcopy() # 只有这个深拷贝
		可变对象是列表和字典及自定义对象
第六课：
		xx：共有变量
		_x：单前置下划线：私有化属性和方法（python3中等同于共有变量））
		__xx：双前置下划线：避免与子类中的属性名冲突，无法在外部直接访问（名字重整所以访问不到）
		__xx__：双前后下划线：用户名字空间的魔法对象或属性》例如__init__，不要自己发明这样的名字
		xx_：单后置下划线：用于避免与python关键字的冲突
第七课：
		变量私有，使用get和set方法
第八课：
		property的用法 
第九课：
		property的第二种用法
			@property 加载get方法上
			@xx.setter 加载set方法上
第十课：
		进制
		0 1（bit 比特位）→ 8bit = 1byte（字节）
		十进制→二进制 除2取余，余数取反
		二进制→十进制 见1取幂（2）
第十一课：
		原码、反码和补码，位运算（左移<< 右移>>）
第十五天
第二课：
		生成器
		yield ：放弃CPU控制权，函数暂停在这里，下次再用时从这里继续执行
第三课：
		生成器的函数形式
		send方法
第四课：
		可迭代对象和迭代器
第六课：
		变量搜索顺序（LEGB原则）：locals -> enclosing function -> globals -> builtins
		查看内建模块dir(__builtins__)
第七课：
		闭包
			函数内部定义函数
			外部函数返回内部函数
			内部函数访问外部函数变量
		作用
			延长局部变量的生命线
第九课：
		装饰器：实际上就是一个闭包  
第十课：
		装饰器功能：
			引入日志
			函数执行时间统计
			执行函数前预备处理
			执行函数后清理功能
			权限校验等场景
			缓存
第十二课：
		通用装饰器（不定长参数）
第一课：
		
第一课：
		
第一课：
		
第一课：
		
第一课：
		
